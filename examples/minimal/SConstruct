import scpm

env_options = {
    "PREFIX": "arm-none-eabi-",
    "CC": "${PREFIX}gcc",
    "AS": "${PREFIX}as",
    "AR": "${PREFIX}ar",
    "RANLIB": "${PREFIX}ranlib",
    "CXX": "${PREFIX}g++",
    "CPPFLAGS": "-mcpu=cortex-m7 -mthumb -mfpu=fpv5-d16 -mfloat-abi=hard -DSTM32F767xx -g -gdwarf-2 -Wall -fdata-sections -ffunction-sections",
    "ASFLAGS": "-mcpu=cortex-m7 -mthumb -mfpu=fpv5-d16 -mfloat-abi=hard -g -gdwarf-2 -Wall",
}

env = Environment(tools=[scpm.setup], **env_options)

ldscript = env.ModuleEntry("ypp_board_stm32", "ldscript.ld")
env.Replace(LINKFLAGS=["-mcpu=cortex-m7", "-mthumb", "-mfpu=fpv5-d16", "-mfloat-abi=hard",
                       "-specs=nano.specs", "-T", ldscript, "-Wl,--gc-sections"])

board = env.Load("ypp_board_stm32", "../../../ypp_board_stm32")

program = env.MainProgram("$BUILDROOT/main", ["$BUILDROOT/main.cpp", board])
env.Depends(program, ldscript)
